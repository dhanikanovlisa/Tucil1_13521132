3 3 5 6 
Total Solution: 108
Execution Time: 1356.0ms 
( 3 + ( 3 * 5 ) ) + 6
3 + ( ( 3 * 5 ) + 6 )
( ( 3 + 3 ) * 5 ) - 6
( ( 3 * 3 ) - 5 ) * 6
( 3 + ( 5 * 3 ) ) + 6
3 + ( ( 5 * 3 ) + 6 )
( ( 3 * 5 ) + 3 ) + 6
( 3 * 5 ) + ( 3 + 6 )
3 * ( ( 5 - 3 ) + 6 )
3 * ( 5 - ( 3 - 6 ) )
( 3 + 5 ) * ( 6 - 3 )
( ( 3 * 5 ) + 6 ) + 3
( 3 * 5 ) + ( 6 + 3 )
3 * ( ( 5 + 6 ) - 3 )
3 * ( 5 + ( 6 - 3 ) )
( 3 + 6 ) + ( 3 * 5 )
3 + ( 6 + ( 3 * 5 ) )
3 * ( ( 6 - 3 ) + 5 )
3 * ( 6 - ( 3 - 5 ) )
( 3 + 6 ) + ( 5 * 3 )
3 + ( 6 + ( 5 * 3 ) )
3 * ( ( 6 + 5 ) - 3 )
3 * ( 6 + ( 5 - 3 ) )
( 3 + ( 3 * 5 ) ) + 6
3 + ( ( 3 * 5 ) + 6 )
( ( 3 + 3 ) * 5 ) - 6
( ( 3 * 3 ) - 5 ) * 6
( 3 + ( 5 * 3 ) ) + 6
3 + ( ( 5 * 3 ) + 6 )
( ( 3 * 5 ) + 3 ) + 6
( 3 * 5 ) + ( 3 + 6 )
3 * ( ( 5 - 3 ) + 6 )
3 * ( 5 - ( 3 - 6 ) )
( 3 + 5 ) * ( 6 - 3 )
( ( 3 * 5 ) + 6 ) + 3
( 3 * 5 ) + ( 6 + 3 )
3 * ( ( 5 + 6 ) - 3 )
3 * ( 5 + ( 6 - 3 ) )
( 3 + 6 ) + ( 3 * 5 )
3 + ( 6 + ( 3 * 5 ) )
3 * ( ( 6 - 3 ) + 5 )
3 * ( 6 - ( 3 - 5 ) )
( 3 + 6 ) + ( 5 * 3 )
3 + ( 6 + ( 5 * 3 ) )
3 * ( ( 6 + 5 ) - 3 )
3 * ( 6 + ( 5 - 3 ) )
( 5 - ( 3 / 3 ) ) * 6
( ( 5 * 3 ) + 3 ) + 6
( 5 * 3 ) + ( 3 + 6 )
( 5 * ( 3 + 3 ) ) - 6
( 5 + 3 ) * ( 6 - 3 )
( ( 5 - 3 ) + 6 ) * 3
( 5 - ( 3 - 6 ) ) * 3
( ( 5 * 3 ) + 6 ) + 3
( 5 * 3 ) + ( 6 + 3 )
( 5 - ( 3 / 3 ) ) * 6
( ( 5 * 3 ) + 3 ) + 6
( 5 * 3 ) + ( 3 + 6 )
( 5 * ( 3 + 3 ) ) - 6
( 5 + 3 ) * ( 6 - 3 )
( ( 5 - 3 ) + 6 ) * 3
( 5 - ( 3 - 6 ) ) * 3
( ( 5 * 3 ) + 6 ) + 3
( 5 * 3 ) + ( 6 + 3 )
( ( 5 + 6 ) - 3 ) * 3
( 5 + ( 6 - 3 ) ) * 3
( 5 * 6 ) - ( 3 + 3 )
( ( 5 * 6 ) - 3 ) - 3
( ( 5 + 6 ) - 3 ) * 3
( 5 + ( 6 - 3 ) ) * 3
( 5 * 6 ) - ( 3 + 3 )
( ( 5 * 6 ) - 3 ) - 3
( 6 + 3 ) + ( 3 * 5 )
6 + ( 3 + ( 3 * 5 ) )
( 6 - 3 ) * ( 3 + 5 )
6 * ( ( 3 * 3 ) - 5 )
( 6 + 3 ) + ( 5 * 3 )
6 + ( 3 + ( 5 * 3 ) )
( 6 + ( 3 * 5 ) ) + 3
6 + ( ( 3 * 5 ) + 3 )
( ( 6 - 3 ) + 5 ) * 3
( 6 - ( 3 - 5 ) ) * 3
( 6 - 3 ) * ( 5 + 3 )
( 6 + 3 ) + ( 3 * 5 )
6 + ( 3 + ( 3 * 5 ) )
( 6 - 3 ) * ( 3 + 5 )
6 * ( ( 3 * 3 ) - 5 )
( 6 + 3 ) + ( 5 * 3 )
6 + ( 3 + ( 5 * 3 ) )
( 6 + ( 3 * 5 ) ) + 3
6 + ( ( 3 * 5 ) + 3 )
( ( 6 - 3 ) + 5 ) * 3
( 6 - ( 3 - 5 ) ) * 3
( 6 - 3 ) * ( 5 + 3 )
( ( 6 + 5 ) - 3 ) * 3
( 6 + ( 5 - 3 ) ) * 3
( 6 + ( 5 * 3 ) ) + 3
6 + ( ( 5 * 3 ) + 3 )
( 6 * 5 ) - ( 3 + 3 )
( ( 6 * 5 ) - 3 ) - 3
6 * ( 5 - ( 3 / 3 ) )
( ( 6 + 5 ) - 3 ) * 3
( 6 + ( 5 - 3 ) ) * 3
( 6 + ( 5 * 3 ) ) + 3
6 + ( ( 5 * 3 ) + 3 )
( 6 * 5 ) - ( 3 + 3 )
( ( 6 * 5 ) - 3 ) - 3
6 * ( 5 - ( 3 / 3 ) )
